// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  email       String       @unique
  password    String
  isAdmin     Boolean      @default(false)
  folders     Folder[]
  files       File[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  @@map("users")
}

model Folder {
  id             Int          @id @default(autoincrement())
  name           String
  userId         Int
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  subfolders     Folder[]     @relation("Subfolders")
  parentFolderId Int?    
  parentFolder   Folder?      @relation("Subfolders", fields: [parentFolderId], references: [id], onDelete: Cascade)
  files          File[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([name, userId, parentFolderId])
  @@map("folders")
}

model File {
  id          Int       @id @default(autoincrement())
  name        String
  size        Int
  url         String    
  key         String    
  folderId    Int?
  folder      Folder?    @relation(fields: [folderId], references: [id], onDelete: SetNull)
  userId      Int?
  user        User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("files")
}